@mixin text($ff: pr, $fz: 18px, $lh: auto, $cl: #000, $td: none, $tt: none) {
  font-family: $ff;
  font-size: $fz;
  line-height: $lh;
  color: $cl;
  text-decoration: $td;
  text-transform: $tt;
}
@mixin mid($flex: true) {
  @if $flex {
    display: flex;
    align-items: center;
    justify-content: center;
  } @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    position: absolute;
  }
}
@mixin threedots($line: 3) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}
@mixin transition($name: all, $time: var(--time)) {
  transition: $name $time;
  -webkit-transition: $name $time;
  -o-transition: $name $time;
}
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  animation: #{$str};
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
}
@mixin transform($args) {
  transform: $args;
  -webkit-transform: $args;
  -moz-transform: $args;
  -ms-transform: $args;
  -o-transform: $args;
}
@mixin transform-origin($args) {
  transform-origin: $args;
  -webkit-transform-origin: $args;
  -moz-transform-origin: $args;
  -ms-transform-origin: $args;
  -o-transform-origin: $args;
}

@mixin custom-scrollbar {
  body::-webkit-scrollbar {
    width: 5px; /* width of the entire scrollbar */
  }

  body::-webkit-scrollbar-track {
    background-color: grey;
  }

  body::-webkit-scrollbar-thumb {
    opacity: 0.5;
    border-radius: 20px; /* roundness of the scroll thumb */
    /* color of the scroll thumb */
    background-color: var(--cl-primary);
    /* creates padding around scroll thumb */
  }
}

@mixin midimg($maxwidth: initial) {
  max-width: $maxwidth;
  min-width: 100%;
  min-height: 100%;
  object-fit: cover;
  @include mid;
}
@mixin imgcenter {
  min-width: 100%;
  min-height: 100%;
  object-fit: cover;
}

@mixin fullscreen($fixed: false) {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  @if $fixed {
    position: fixed;
  } @else {
    position: absolute;
  }
}

@mixin visible($param: 1) {
  @if $param == 1 {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  } @else {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }
}
@mixin br($radius) {
  border-radius: $radius;
  background-clip: padding-box;
}

@mixin overtext($lines) {
  display: -webkit-inline-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  overflow: hidden;
}
@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}

@mixin customscroll($width: 5px, $bgTrack: #000, $bgThumb: #ddd) {
  &::-webkit-scrollbar {
    width: $width;
  }
  &::-webkit-scrollbar-track {
    background: $bgTrack;
  }
  &::-webkit-scrollbar-thumb {
    background: $bgThumb;
  }
}

@mixin placeholder {
  ::-webkit-input-placeholder {
    /* Edge */
    @content;
  }

  :-ms-input-placeholder {
    @content;
  }

  ::placeholder {
    @content;
  }
}

@mixin hidearrowinput {
  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type="number"] {
    -moz-appearance: textfield;
  }
}

@mixin hideiconinputdate {
  input[type="date"]::-webkit-inner-spin-button,
  input[type="date"]::-webkit-calendar-picker-indicator {
    display: none;
    -webkit-appearance: none;
  }
}

// Responsive
// Large desktop
@mixin lg {
  @media screen and (max-width: ($lg-max)) {
    @content;
  }
}
// desktop
@mixin md {
  @media screen and (max-width: ($md-max)) {
    @content;
  }
}
// tablet
@mixin sm {
  @media screen and (max-width: ($sm-max)) {
    @content;
  }
}
// mobile
@mixin xs {
  @media screen and (max-width: $xs-max) {
    @debug $xs-max;
    @content;
  }
}
// small mobile
@mixin xxs {
  @media screen and (max-width: ($xxs-max)) {
    @content;
  }
}
// desktop landscape
@mixin mdX {
  @media screen and (max-width: $md-max) and (orientation: landscape) {
    @content;
  }
}
// tablet landscape
@mixin smX {
  @media screen and (max-width: $sm-max) and (orientation: landscape) {
    @content;
  }
}
// mobile landscape
@mixin xsX {
  @media screen and (max-width: $xs-max) and (orientation: landscape) {
    @content;
  }
}

@mixin maxW($args) {
  @media (max-width: $args) {
    @content;
  }
}
@mixin minW($args) {
  @media (min-width: $args) {
    @content;
  }
}
@mixin minH($args) {
  @media (min-height: $args) {
    @content;
  }
}
@mixin maxH($args) {
  @media (max-height: $args) {
    @content;
  }
}
// desktop landscape
@mixin mdX {
  @media screen and (max-width: $md-max) and (orientation: landscape) {
    @content;
  }
}
// tablet landscape
@mixin smX {
  @media screen and (max-width: $sm-max) and (orientation: landscape) {
    @content;
  }
}
// mobile landscape
@mixin xsX {
  @media screen and (max-width: $xs-max) and (orientation: landscape) {
    @content;
  }
}

@mixin maxW($args) {
  @media (max-width: $args) {
    @content;
  }
}
@mixin minW($args) {
  @media (min-width: $args) {
    @content;
  }
}
@mixin minH($args) {
  @media (min-height: $args) {
    @content;
  }
}
@mixin maxH($args) {
  @media (max-height: $args) {
    @content;
  }
}
